{
    "swagger": "2.0",
    "info": {
        "description": "Esta api fue realizada como proyecto en el curso practico de nodejs de [Platzi](https://platzi.com/clases/practico-node/). Primera vez haciendo documentacion de una API :)",
        "version": "1.0.0",
        "title": "Curso practico NodeJS",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "alejandrodubon88@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "tags": [
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": ["https", "http"],
    "paths": {
        "/user": {
            "post": {
                "tags": ["user"],
                "summary": "Crear usuario",
                "description": "metodo para crear 1 usuario",
                "operationId": "createUser",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Crea un objeto del tipo usuario",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "get": {
                "tags": ["user"],
                "summary": "Obtener lista de usuarios",
                "description": "Obtener lista de usuarios",
                "operationId": "loginUser",
                "produces": ["application/json"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            },
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": ["user"],
                "summary": "Obtener un usuario por medio de un parametro",
                "description": "",
                "operationId": "",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "El id del usuario buscado, probar con el id 1",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": ["user"],
                "summary": "Actualizar el nombre de un usuario",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "produces": ["application/xml", "application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "El id del usuario buscado, probar con el id 1",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Objeto del tipo usuario con el nuevo nombre (se puede omitir el id, en el body)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": ["user"],
                "summary": "Eliminar usuario",
                "description": "This can only be done by the logged in user.",
                "operationId": "",
                "produces": ["application/xml", "application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "El id del usuario buscado, probar con el id 1",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["login"],
                "summary": "Autenticarse en la api",
                "description": "metodo para obtener un token",
                "operationId": "",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Crea un objeto del tipo usuario",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
